{"version":3,"file":"static/js/473.43ab6a0f.chunk.js","mappings":"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","sources":["webpack://react_app-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react_app-1/./src/components/Profile/Posts/Posts.module.css?138f","webpack://react_app-1/./src/components/Profile/Posts/PostElem/PostElem.module.css?cc98","components/Profile/Posts/PostElem/PostElem.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_img\":\"ProfileInfo_main_img__hLH8y\",\"profile__item\":\"ProfileInfo_profile__item__FCXcz\",\"profile__img\":\"ProfileInfo_profile__img__2i0zI\",\"profile__name\":\"ProfileInfo_profile__name__grHDE\",\"profile__about\":\"ProfileInfo_profile__about__ECsrw\",\"profile__status_container\":\"ProfileInfo_profile__status_container__n2++2\",\"profile__about_status\":\"ProfileInfo_profile__about_status__mgiAO\",\"profile__status\":\"ProfileInfo_profile__status__GxbNk\",\"profile__span\":\"ProfileInfo_profile__span__2enSr\",\"profile__contacts_keys\":\"ProfileInfo_profile__contacts_keys__P0+uP\",\"profile__error\":\"ProfileInfo_profile__error__Zhcrk\",\"profile__btn\":\"ProfileInfo_profile__btn__FqL5u\",\"profile__span_value\":\"ProfileInfo_profile__span_value__zD+hh\"};","import React, { useState, useEffect } from 'react';\r\nimport ProInfoCSS from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   const activateMode = () => {\r\n      setEditMode(true)\r\n   }\r\n   const deactivateMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatusThunkCreator(status);\r\n   }\r\n   const onStatusChange = (e) => {\r\n         setStatus(e.currentTarget.value);\r\n   }\r\n   useEffect( () => {\r\n      setStatus(props.status)\r\n   }, [props.status])\r\n \r\n   return  (\r\n      <div className={ProInfoCSS.profile__status_container}>\r\n         <span className={ProInfoCSS.profile__about_status}>Status:</span>\r\n         {editMode ? <input value={status} onChange={onStatusChange} onBlur={deactivateMode} autoFocus={true}></input> :\r\n         <span onDoubleClick={activateMode} className={ProInfoCSS.profile__status}>{props.status || 'no status'}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import ProInfoCSS from './ProfileInfo.module.css';\r\nimport { Field } from 'redux-form';\r\nimport { Input, Textarea } from '../../common/FormControls/FormControls';\r\nimport {reduxForm} from 'redux-form';\r\n\r\nconst ProfileDataForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         {props.error && <span className={ProInfoCSS.profile__error}>{props.error}</span>}\r\n         <div>\r\n            <p className={ProInfoCSS.profile__span}>Full name:</p>\r\n            <Field component={Textarea} placeholder={\"Full name\"} name={\"fullName\"}/>\r\n         </div>      \r\n         <div>\r\n            <p className={ProInfoCSS.profile__span}>Looking for a job:</p>\r\n            <Field component={Input} type={'checkbox'} placeholder={\"Looking for a job?\"} name={\"lookingForAJob\"}/>\r\n         </div>\r\n         <div>\r\n            <p className={ProInfoCSS.profile__span}>My professional skills:</p>\r\n            <Field component={Input} placeholder={\"Professional skills\"} name={\"lookingForAJobDescription\"}/>\r\n         </div>\r\n         <div>\r\n            <p className={ProInfoCSS.profile__span}>About me:</p>\r\n            <Field component={Textarea} placeholder={\"Tell us smth about you\"} name={\"aboutMe\"}/>\r\n         </div>\r\n         <div>\r\n            <span className={ProInfoCSS.profile__span}>Contacts: {Object.keys(props.profile.contacts).map(key => {\r\n               if(key === 'vk' || key === 'mainLink') {\r\n                  return null\r\n               }\r\n               return (\r\n                  <div>\r\n                     <p className={ProInfoCSS.profile__span}>{key}:</p>\r\n                     <Field component={Input} placeholder={`Your ${key}`} name={`contacts.`+key}/>\r\n                  </div>                  \r\n               )})}\r\n            </span>\r\n         </div>\r\n         { !props.isOwner ? <div><button className={ProInfoCSS.profile__btn} >Save</button></div> : null }\r\n      </form>\r\n   )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'setProfile', enableReinitialize: true, destroyOnUnmount: false })(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import Preloader from '../../common/Preloader/Preloader';\r\nimport ProInfoCSS from './ProfileInfo.module.css';\r\nimport avatar from '../../../assets/img/users_ava.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileInfo = (props) => {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let isOwner = props.router.params.userID;\r\n\r\n   if (!props.profile) {\r\n      return <Preloader/>\r\n   }\r\n   const addImage = (e) => {\r\n      if(e.target.files.length) {\r\n         props.addImageThunkCreator(e.target.files[0]);\r\n      }\r\n   }   \r\n   const onSubmit = (data) => {\r\n      props.saveProfileThunkCreator(data)\r\n         .then( () => {\r\n            setEditMode(false);\r\n         })\r\n      \r\n   }\r\n   return (\r\n      <div className={ProInfoCSS.profileInfo_container} >\r\n         <img className={ProInfoCSS.main_img}         \r\n            src=\"https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxleHBsb3JlLWZlZWR8MXx8fGVufDB8fHx8&w=1000&q=80\"/>\r\n         <div className={ProInfoCSS.profile__item}>\r\n            <img className={ProInfoCSS.profile__img} src={props.profile.photos.large || avatar}/>\r\n            { !props.isOwner ? <input onChange={addImage} type={'file'}/> : null }\r\n            \r\n            <ProfileStatusWithHooks {...props}/>\r\n            {editMode ? <ProfileDataReduxForm initialValues={props.profile} onSubmit={onSubmit} deactivateEditMode={() =>{setEditMode(false)}} {...props} /> :\r\n            <ProfileData {...props} activateEditMode={() =>{setEditMode(true)}} \r\n            isOwner={isOwner} />}\r\n         </div>         \r\n      </div>      \r\n   )\r\n}\r\n\r\nconst ProfileData = (props) => {  \r\n   return (\r\n      <div >\r\n         <div>\r\n            <p className={ProInfoCSS.profile__name}>{props.profile.fullName}</p>\r\n         </div>           \r\n         <div>\r\n            <span className={ProInfoCSS.profile__span}>\r\n               <span>Looking for a job: </span>\r\n               <span  className={ProInfoCSS.profile__span_value }>{props.profile.lookingForAJob ? ' Yes' : ' No'}</span></span>\r\n         </div>\r\n         <div>\r\n            <span className={ProInfoCSS.profile__span}>My professional skills: \r\n            <span className={ProInfoCSS.profile__span_value}>{props.profile.lookingForAJobDescription}</span></span>\r\n         </div>\r\n         <div>\r\n            <span className={ProInfoCSS.profile__span}>About me:  \r\n            <span className={ProInfoCSS.profile__span_value }> {props.profile.aboutMe}</span></span>\r\n         </div>                       \r\n         <div>\r\n            <span className={ProInfoCSS.profile__span}>Contacts: {Object.keys(props.profile.contacts).map(key => {\r\n               if(key === 'vk' || key === 'mainLink') {\r\n                  return null\r\n               }\r\n               return <Contact  key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n            })}</span>\r\n         </div>\r\n         { !props.isOwner ? <div><button className={ProInfoCSS.profile__btn}\r\n         onClick={props.activateEditMode}>edit</button></div> : null }                     \r\n      </div>\r\n   )\r\n}\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n   return <div className={ProInfoCSS.profile__contacts_keys}>{contactTitle}: \r\n   <span className={ProInfoCSS.profile__span_value }> {contactValue}</span></div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post__item\":\"Posts_post__item__JpDVw\",\"posts__btn\":\"Posts_posts__btn__9282j\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"PostElem_item__TO1s3\",\"item_img\":\"PostElem_item_img__rQiA9\"};","import PostElemCSS from './PostElem.module.css'\r\n\r\nconst PostElem = (props) => {\r\n   return (\r\n      <div>\r\n         <img className={PostElemCSS.item_img} src=\"https://e7.pngegg.com/pngimages/799/987/png-clipart-computer-icons-avatar-icon-design-avatar-heroes-computer-wallpaper-thumbnail.png\" alt=\"avatar\" />\r\n         <div className={PostElemCSS.item}>{props.message} <span>{props.like} likes</span> </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PostElem","import postsCss from './Posts.module.css'\r\nimport PostElem from './PostElem/PostElem'\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {requiredField, maxLength} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst Posts = React.memo(props => {\r\n   const Post = props.postsData.map( p => <PostElem  key={p.id} like={p.likesCount} message={p.message}/>);\r\n\r\n   let addPost = (value) => {\r\n      props.addPost(value.postText);\r\n   }\r\n\r\n   const AddPostForm = (props) => {\r\n      return (\r\n         <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n               <Field component={Textarea} name={'postText'} validate={[requiredField, maxLength(15)]}/>\r\n            </div>\r\n            <div>\r\n               <button className={postsCss.posts__btn}>Add post</button>\r\n            </div>\r\n      </form>\r\n      )\r\n   }\r\n   const AddPostReduxForm = reduxForm({form: 'editProfile'})(AddPostForm);\r\n   \r\n   return (\r\n      <div className={postsCss.post__item}>\r\n         <AddPostReduxForm onSubmit={addPost}/>\r\n         <p>My posts</p>\r\n         <div className={postsCss.post__new_item}>\r\n         </div>\r\n         <div>\r\n            {Post}\r\n         </div>\r\n      </div>\r\n      )\r\n})\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport Posts from './Posts';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      postsData: state.profilePage.postsData,\r\n      textValue: state.profilePage.textValue\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (value) => {\r\n         dispatch(addPostActionCreator(value));\r\n      } \r\n   }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps) (Posts);\r\n\r\n\r\nexport default PostsContainer;\r\n\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Profile= (props) => {\r\n  return (\r\n  <div>\r\n    <ProfileInfo {...props}/>\r\n    <PostsContainer/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {profileThunkCreator, getStatusThunkCreator,\r\n  updateStatusThunkCreator, addImageThunkCreator, saveProfileThunkCreator} from '../../redux/profile-reducer'\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n          <Component\r\n              {...props}\r\n              router={{ location, navigate, params }}\r\n          />\r\n      );\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userID = this.props.router.params.userID;\r\n    if(!userID) {\r\n      userID = this.props.loginnedUserId\r\n    }\r\n    if(!userID) {\r\n      userID = 28131;\r\n    }\r\n    this.props.profileThunkCreator(userID);\r\n    this.props.getStatusThunkCreator(userID);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.props.router.params.userID != prevProps.router.params.userID) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}/>\r\n      </div>\r\n     )\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loginnedUserId: state.auth.id    \r\n  }  \r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {profileThunkCreator, getStatusThunkCreator,\r\n  updateStatusThunkCreator, addImageThunkCreator, saveProfileThunkCreator}), withRouter)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","ProInfoCSS","value","onChange","e","currentTarget","onBlur","updateStatusThunkCreator","autoFocus","onDoubleClick","reduxForm","form","enableReinitialize","destroyOnUnmount","onSubmit","handleSubmit","error","Field","component","Textarea","placeholder","name","Input","type","Object","keys","profile","contacts","map","key","isOwner","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","onClick","activateEditMode","router","params","userID","Preloader","src","photos","large","avatar","target","files","length","addImageThunkCreator","initialValues","data","saveProfileThunkCreator","then","deactivateEditMode","PostElemCSS","alt","message","like","React","Post","postsData","p","likesCount","id","AddPostReduxForm","validate","requiredField","maxLength","postsCss","addPost","postText","connect","state","profilePage","textValue","dispatch","addPostActionCreator","Posts","ProfileContainer","this","loginnedUserId","profileThunkCreator","getStatusThunkCreator","refreshProfile","prevProps","prevState","snapshot","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}